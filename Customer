1.	User downloads the app from play_store/apple_store
2.  Application asks to enter the phone number. Payse server generates an OTP and sends it the customer via SMS using an introductory message about Payse. 
    Customer enters the OTP, which gets authenticated against the Payse server. 
3.	Application sends the OTP to this no. and auto reads it to verify the phone no.
   [After doing some research- Auto verification of OTP might not be a good idea, since it can be vulnerable for potential hacks. Manual verification, as done in other apps. 
    You can use SMPP protocol to push messages to the intended recipient. There are few open source implementation which provide smpp protocol implementation out of the box. ]
4.	Next, user sign in with google. 
   [- This links user's name + email id + whole bunch of friend's email ids]
   
5.  At this stage, Payse creates the customer id which maps every customer detail
   =============================================================================================================================
    Rest APIâ€™S for the USER
   +(contact,name) -> Register
   +(Unique Id) ->    Combination of email Id+Phone No+ Uniquely generated Integer.
   =============================================================================================================================
  +Database
  +==========================================================================================
  Usertable
  +	userID_Unique : To give it to the merchants when settling a payment. 
  +	Name
  +	Contact
  + Bank Details
  +==========================================================================================	
   First factor of authentication: combination of device + application download related no. + sim no . - jumbled up and encrypted
  - need to understand how to use it. 
  ===========================================================================================
  Linking funding source:
  User selects a bank from the drop down
  Enters the account no.
  Bank saves this information securely with Payse
  ============================================================================================
  AccountsTable
  + userID_Unique
  + bankName
  + bankAccountNumber
  ============================================================================================
  Each customer can have multiple bank accounts, which will be listed in the dropdown list of payse application. When a customer
  selects a particular bank to transfer the amount, payse server returns the account details attached.
  
  This payse server is located behind banks firewall. This gives us an opportunity to associate customers bank details with the
  account number to reduce the security vulnerabilities.
  =============================================================================================
  Example Model:
  1. Customer selects State Bank of India from the drop down list. 
  2. He enters 1234-5678-1236-2356 as his account number and submits the request. 
  3. Now payse server within SBI's firewall needs to authenticate if the bank account exists or not, 
   -> give an api call, www.sbi.com/verifyaccountdetails/1234-5678-1236-2356
   -> returns a good response if the account exists with SBI
  4. Should we have a server within banks firewall or can we utilize their existing api's? Having a server within their firewall
     is technically feasible. 
  ==============================================================================================

  

